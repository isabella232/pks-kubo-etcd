#!/bin/bash -exu


LOG_DIR=/var/vcap/sys/log/etcd
DATA_DIR=/var/vcap/store/etcd
RUN_DIR=/var/vcap/sys/run/etcd
CERT_DIR=/var/vcap/jobs/etcd/config/certs

function create_directories_and_chown_to_vcap() {
    mkdir -p ${LOG_DIR}
    chown -R vcap:vcap ${LOG_DIR}

    mkdir -p ${DATA_DIR}
    chown -R vcap:vcap ${DATA_DIR}

    <% if p("etcd.require_ssl") || p("etcd.peer_require_ssl") %>
    mkdir -p ${CERT_DIR}
    chown -R vcap:vcap ${CERT_DIR}
    chmod 640 ${CERT_DIR}/*.{crt,key}
    <% end %>

    # This is here for upgrade purposes to ensure RUN_DIR is owned by vcap
    mkdir -p ${RUN_DIR}
    chown -R vcap:vcap ${RUN_DIR}
}

create_directories_and_chown_to_vcap

SCRIPT_DIR=$(dirname $0)
SCRIPT_NAME=$(basename $0)

exec > >(tee -a >(logger -p user.info -t vcap.${SCRIPT_NAME}.stdout) | awk -W interactive '{ system("echo -n [$(date +\"%Y-%m-%d %H:%M:%S%z\")]"); print " " $0 }' >> ${LOG_DIR}/${SCRIPT_NAME}.log)
exec 2> >(tee -a >(logger -p user.error -t vcap.${SCRIPT_NAME}.stderr) | awk -W interactive '{ system("echo -n [$(date +\"%Y-%m-%d %H:%M:%S%z\")]"); print " " $0 }' >> ${LOG_DIR}/${SCRIPT_NAME}.err.log)

function main(){
  ulimit -v unlimited
  ulimit -n 100000
  sudo -u vcap $SCRIPT_DIR/etcd_ctl $@
}

main $@
